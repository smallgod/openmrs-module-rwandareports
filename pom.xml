<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.openmrs.maven.parents</groupId>
        <artifactId>maven-parent-openmrs-module</artifactId>
        <version>1.1.1</version>
    </parent>

    <groupId>org.openmrs.module</groupId>
    <artifactId>rwandareports</artifactId>
    <version>3.0.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <name>Rwanda Reports</name>
    <description>Rwanda Reports Module</description>

    <url>https://wiki.openmrs.org/x/FQ4z</url>

    <modules>
        <module>api</module>
        <module>omod</module>
    </modules>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <openMRSVersion>2.3.4-SNAPSHOT</openMRSVersion>
        <calculationVersion>1.3.0</calculationVersion>
        <heightweighttrackerVersion>2.1.0-SNAPSHOT</heightweighttrackerVersion>
        <htmlwidgetsVersion>1.10.0</htmlwidgetsVersion>
        <legacyuiVersion>1.12.0-SNAPSHOT</legacyuiVersion>
        <orderextensionVersion>3.2.0-SNAPSHOT</orderextensionVersion>
        <reportingcompatibilityVersion>2.0.8</reportingcompatibilityVersion>
        <reportingobjectgroupVersion>2.0.1</reportingobjectgroupVersion>
        <reportingVersion>1.24.0</reportingVersion>
        <rowperpatientreportsVersion>2.0.0</rowperpatientreportsVersion>
        <serializationVersion>0.2.15</serializationVersion>
        <MODULE_ID>${project.parent.artifactId}</MODULE_ID>
        <MODULE_NAME>Rwanda Reports</MODULE_NAME>
        <MODULE_VERSION>${project.parent.version}</MODULE_VERSION>
        <MODULE_PACKAGE>${project.parent.groupId}.${project.parent.artifactId}</MODULE_PACKAGE>
        <legacyUIomodVersion>1.8.2</legacyUIomodVersion>
        <junit5Version>5.7.2</junit5Version>
        <junit4Version>4.13.1</junit4Version>
        <mambaETLversion>2.0.1-SNAPSHOT</mambaETLversion>
    </properties>

    <dependencyManagement>
        <dependencies>

            <dependency>
                <groupId>org.openmrs.module</groupId>
                <artifactId>legacyui-omod</artifactId>
                <version>${legacyUIomodVersion}</version>
                <scope>provided</scope>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>org.openmrs.test</groupId>
            <artifactId>openmrs-test</artifactId>
            <version>${openMRSVersion}</version>
            <type>pom</type>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.powermock</groupId>
                    <artifactId>powermock-module-junit4</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.powermock</groupId>
                    <artifactId>powermock-api-mockito2</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.openmrs.api</groupId>
            <artifactId>openmrs-api</artifactId>
            <version>${openMRSVersion}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.openmrs.api</groupId>
            <artifactId>openmrs-api</artifactId>
            <version>${openMRSVersion}</version>
            <classifier>tests</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.openmrs.module</groupId>
            <artifactId>reporting-api</artifactId>
            <version>${reportingVersion}</version>
            <type>jar</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.openmrs.module</groupId>
            <artifactId>reporting-api-2.0</artifactId>
            <version>${reportingVersion}</version>
            <type>jar</type>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.openmrs.module</groupId>
            <artifactId>reportingcompatibility-api</artifactId>
            <version>${reportingcompatibilityVersion}</version>
            <type>jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.openmrs.module</groupId>
            <artifactId>rowperpatientreports-api</artifactId>
            <version>${rowperpatientreportsVersion}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.openmrs.module</groupId>
            <artifactId>orderextension-api</artifactId>
            <version>${orderextensionVersion}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.openmrs.module</groupId>
            <artifactId>reportingobjectgroup-api</artifactId>
            <version>${reportingobjectgroupVersion}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.openmrs.module</groupId>
            <artifactId>heightweighttracker-api</artifactId>
            <version>${heightweighttrackerVersion}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.openmrs.module</groupId>
            <artifactId>htmlwidgets-api</artifactId>
            <version>${htmlwidgetsVersion}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.openmrs.module</groupId>
            <artifactId>serialization.xstream-api</artifactId>
            <version>${serializationVersion}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.openmrs.module</groupId>
            <artifactId>serialization.xstream-api-2.0</artifactId>
            <version>${serializationVersion}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.openmrs.module</groupId>
            <artifactId>calculation-api</artifactId>
            <version>${calculationVersion}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>commons-dbutils</groupId>
            <artifactId>commons-dbutils</artifactId>
            <version>1.5</version>
        </dependency>
        <dependency>
            <groupId>mysql</groupId>
            <artifactId>mysql-connector-java</artifactId>
            <version>5.1.45</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.4</version>
        </dependency>
    </dependencies>

    <scm>
        <developerConnection>scm:git:https://github.com/PIH/openmrs-module-rwandareports</developerConnection>
        <url>https://github.com/PIH/openmrs-module-rwandareports</url>
        <tag>HEAD</tag>
    </scm>

    <distributionManagement>
        <repository>
            <id>openmrs-repo-modules-pih</id>
            <name>OpenMRS PIH Modules</name>
            <url>https://openmrs.jfrog.io/artifactory/modules-pih/</url>
        </repository>
        <snapshotRepository>
            <id>openmrs-repo-modules-pih-snapshots</id>
            <name>OpenMRS PIH Module Snapshots</name>
            <url>https://openmrs.jfrog.io/artifactory/modules-pih-snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <repositories>
        <repository>
            <id>openmrs-repo</id>
            <name>OpenMRS Nexus Repository</name>
            <url>https://openmrs.jfrog.io/artifactory/public/</url>
        </repository>
        <repository>
            <id>central</id>
            <name>Maven Repository Switchboard</name>
            <layout>default</layout>
            <url>http://repo1.maven.org/maven2</url>
        </repository>
    </repositories>

    <pluginRepositories>
        <pluginRepository>
            <id>openmrs-repo</id>
            <name>OpenMRS Nexus Repository</name>
            <url>https://openmrs.jfrog.io/artifactory/public/</url>
            <snapshots>
                <enabled>true</enabled>
            </snapshots>
        </pluginRepository>
    </pluginRepositories>

    <build>

        <finalName>${project.parent.artifactId}-${project.parent.version}</finalName>

        <plugins>
            <plugin>
                <groupId>org.openmrs.maven.plugins</groupId>
                <artifactId>openmrs-dependency-maven-plugin</artifactId>
                <version>1.0.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>retrieve-versions</goal>
                            <goal>create-versions</goal>
                            <goal>compare-versions</goal>
                            <goal>attach-versions</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <phase>generate-test-resources</phase>
                        <goals>
                            <goal>parse-version</goal>
                        </goals>
                        <configuration>
                            <propertyPrefix>omrsVersion</propertyPrefix>
                            <versionString>${openMRSVersion}</versionString>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.1</version>
                    <configuration>
                        <target>1.8</target>
                        <source>1.8</source>
                    </configuration>
                </plugin>
                <!-- 1. Unpack the dependency jar first -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>3.2.0</version>
                    <executions>
                        <execution>
                            <id>unpack-scripts</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>unpack</goal>
                            </goals>
                            <configuration>
                                <artifactItems>
                                    <artifactItem>
                                        <groupId>org.openmrs.module</groupId>
                                        <artifactId>ohrimamba-core-api</artifactId>
                                        <version>${mambaETLversion}</version>
                                        <type>jar</type>
                                        <outputDirectory>${project.build.directory}/mamba-etl</outputDirectory>
                                        <includes>_core/**</includes>
                                    </artifactItem>
                                </artifactItems>
                            </configuration>
                        </execution>
                        <execution>
                            <id>Expand resources</id>
                            <goals>
                                <goal>unpack-dependencies</goal>
                            </goals>
                            <phase>generate-resources</phase>
                            <configuration>
                                <includeGroupIds>${project.parent.groupId}</includeGroupIds>
                                <includeArtifactIds>${project.parent.artifactId}-api</includeArtifactIds>
                                <includeScope>compile</includeScope>
                                <includes>**\/*.xml,**\/*.properties</includes>
                                <outputDirectory>${project.build.directory}/classes</outputDirectory>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- Step 2 & the last step-->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.2.0</version>
                    <executions>

                        <!-- 2. Copy contents of the resources directory of the dependency jar to a target location -->
                        <execution>
                            <id>copy-scripts</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <resources>
                                    <resource>
                                        <directory>${project.basedir}/src/main/resources/_etl</directory>
                                        <filtering>true</filtering>
                                    </resource>
                                </resources>
                                <outputDirectory>${project.build.directory}/mamba-etl/_etl</outputDirectory>
                            </configuration>
                        </execution>

                        <!-- This should execute last - to copy the build script to a location liquibase.xml can access-->
                        <execution>
                            <id>copy-final-build-script</id>
                            <phase>install</phase>
                            <goals>
                                <goal>copy-resources</goal>
                            </goals>
                            <configuration>
                                <resources>
                                    <resource>
                                        <directory>
                                            ${project.build.directory}/mamba-etl/_core/database/mysql/build
                                        </directory>
                                        <filtering>true</filtering>
                                    </resource>
                                </resources>
                                <outputDirectory>${project.parent.basedir}/api/src/main/resources/mamba
                                </outputDirectory>
                            </configuration>
                        </execution>

                    </executions>
                </plugin>

                <!-- 3. Make the compiler scripts executable & then run the compiler -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>3.0.0</version>
                    <executions>

                        <execution>
                            <id>set-executable-permission</id>
                            <phase>prepare-package</phase>
                            <goals>
                                <goal>exec</goal>
                            </goals>
                            <configuration>
                                <executable>/bin/sh</executable>
                                <arguments>
                                    <argument>-c</argument>
                                    <argument>chmod -R +x ${project.build.directory}/mamba-etl/_core/compiler</argument>
                                </arguments>
                            </configuration>
                        </execution>

                        <execution>
                            <id>run-script</id>
                            <phase>package</phase>
                            <goals>
                                <goal>exec</goal>
                            </goals>
                            <configuration>
                                <executable>/bin/sh</executable>
                                <workingDirectory>${project.build.directory}/mamba-etl/_core/compiler/linux
                                </workingDirectory>
                                <arguments>

                                    <!-- the Engine compiler script -->
                                    <argument>compile.sh</argument>

                                    <!-- The source database (OpenMRS database) -->
                                    <argument>-d kibagabaga</argument>

                                     <!-- The target or analysis Database where the ETL data is stored -->
                                    <argument>-a analysis_db</argument>

                                    <!-- File with a list of all files with stored procedures -->
                                    <!-- Remove this argument after automating core to auto-read this -->
                                    <argument>-s ../../database/mysql/sp_makefile</argument>

                                    <!-- a JSON configuration path/folder for all config files for db flattening -->
                                    <!-- Folder containing configs folder, derived folders and any other ETL related folders -->
                                    <argument>-t ${project.build.directory}/mamba-etl/_etl/config</argument>

                                    <!-- Database Vendor/Engine targeted in this ETL -->
                                    <argument>-n mysql</argument>

                                    <!-- Set 1 to recompile/build the scripts else 0 - not to. If 1 - don't forget to change the liquibase changeset ID -->
                                    <argument>-b 1</argument>

                                    <!-- add any other arguments below -->
                                    <argument></argument>

                                    <argument></argument>

                                    <argument></argument>

                                </arguments>
                            </configuration>
                        </execution>

                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-release-plugin</artifactId>
                    <version>2.5</version>
                    <configuration>
                        <preparationGoals>clean install</preparationGoals>
                        <autoVersionSubmodules>true</autoVersionSubmodules>
                        <useReleaseProfile>false</useReleaseProfile>
                        <tagNameFormat>@{project.version}</tagNameFormat>
                        <allowTimestampedSnapshots>true</allowTimestampedSnapshots>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>2.4</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>test-jar</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>2.12</version>
                </plugin>
                <plugin>
                    <groupId>org.openmrs.maven.plugins</groupId>
                    <artifactId>maven-openmrs-plugin</artifactId>
                    <version>1.0.1</version>
                    <extensions>true</extensions>
                    <executions>
                        <execution>
                            <id>init</id>
                            <phase>initialize</phase>
                            <goals>
                                <goal>initialize-module</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>pack</id>
                            <phase>package</phase>
                            <goals>
                                <goal>package-module</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>2.1</version>
                </plugin>

            </plugins>
        </pluginManagement>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/*.xml</exclude>
                    <exclude>**/*.txt</exclude>
                    <exclude>**/*.properties</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.xml</include>
                    <include>**/*.txt</include>
                    <include>**/*.properties</include>
                </includes>
            </resource>
            <resource>
                <directory>src/main/webapp</directory>
                <filtering>false</filtering>
                <targetPath>web/module</targetPath>
            </resource>
        </resources>

        <testResources>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/*.xml</exclude>
                    <exclude>**/*.properties</exclude>
                </excludes>
            </testResource>
            <testResource>
                <directory>src/test/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.xml</include>
                    <include>**/*.properties</include>
                </includes>
            </testResource>
        </testResources>
    </build>

</project>
